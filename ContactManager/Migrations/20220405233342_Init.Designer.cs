// <auto-generated />
using System;
using ContactManager.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContactManager.Migrations
{
    [DbContext(typeof(ContactContext))]
    [Migration("20220405233342_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContactManager.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categorys");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Name = "Friend"
                        },
                        new
                        {
                            CategoryID = 2,
                            Name = "Work"
                        },
                        new
                        {
                            CategoryID = 3,
                            Name = "Family"
                        },
                        new
                        {
                            CategoryID = 4,
                            Name = "Foe"
                        },
                        new
                        {
                            CategoryID = 5,
                            Name = "Bestie"
                        });
                });

            modelBuilder.Entity("ContactManager.Models.ContactInfo", b =>
                {
                    b.Property<int>("ContactInfoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactInfoID");

                    b.HasIndex("CategoryID");

                    b.ToTable("ContactInfos");

                    b.HasData(
                        new
                        {
                            ContactInfoID = 1,
                            CategoryID = 1,
                            CreateDate = new DateTime(2022, 4, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "FlyBoy@gmail.com",
                            FirstName = "Luke",
                            LastName = "Skywalker",
                            Organization = "The Rebellion",
                            PhoneNumber = "502-896-1234"
                        },
                        new
                        {
                            ContactInfoID = 2,
                            CategoryID = 5,
                            CreateDate = new DateTime(2022, 4, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "BountyHunter@gmail.com",
                            FirstName = "Boba",
                            LastName = "Fett",
                            Organization = "Bounty Hunter's Guild",
                            PhoneNumber = "502-999-5555"
                        },
                        new
                        {
                            ContactInfoID = 3,
                            CategoryID = 4,
                            CreateDate = new DateTime(2022, 4, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "PewPewLasers@gmail.com",
                            FirstName = "Imperial ",
                            LastName = "StormTrooper",
                            Organization = "The Empire",
                            PhoneNumber = "502-444-4123"
                        });
                });

            modelBuilder.Entity("ContactManager.Models.ContactInfo", b =>
                {
                    b.HasOne("ContactManager.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
